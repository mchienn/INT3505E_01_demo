openapi: 3.0.3
info:
  title: Book Management API
  description: Simple API to manage books (demo for OpenAPI + Swagger UI)
  version: 1.0.0
servers:
  - url: http://localhost:3000
    description: Local development server

paths:
  /books:
    get:
      summary: Get all books
      description: Retrieve a list of all books
      responses:
        "200":
          description: A JSON array of books
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Book"

    post:
      summary: Create a new book
      description: Add a new book to the collection
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/BookInput"
      responses:
        "201":
          description: Book created successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Book"

  /books/{id}:
    get:
      summary: Get book by ID
      parameters:
        - name: id
          in: path
          required: true
          description: ID of the book
          schema:
            type: integer
      responses:
        "200":
          description: Book found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Book"
        "404":
          description: Book not found

    put:
      summary: Update a book
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/BookInput"
      responses:
        "200":
          description: Book updated successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Book"

    delete:
      summary: Delete a book
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        "204":
          description: Book deleted successfully
        "404":
          description: Book not found

components:
  schemas:
    Book:
      type: object
      properties:
        id:
          type: integer
          example: 1
        title:
          type: string
          example: Clean Code
        author:
          type: string
          example: Robert C. Martin

    BookInput:
      type: object
      required:
        - title
        - author
      properties:
        title:
          type: string
          example: Refactoring
        author:
          type: string
          example: Martin Fowler
